setwd("~/Code/AnalyticsEdge")
CPS = read.scv("CPSData.csv")
CPS = read.csv("CPSData.csv")
getwd()
CPS = read.csv("CPSData.csv")
str(CPS)
table(CPS$Industry)
summary(CPS$Industry)
which.max(CPS$Industry)
table.max(CPS$Industry)
max(CPS$Industry)
which.max(summary(CPS$Industry))
which.max(summary(CPS$Industry), na.rm=TRUE)
which.max(summary(CPS$Industry, na.rm=TRUE))
(CPS$Industry, na.rm=TRUE)
CPS$Industry, na.rm=TRUE)
CPS$Industry, na.rm=TRUE
summary(CPS$Industry, na.rm=TRUE)
sort(summary(CPS$Industry))
sort(table(CPS$State))
str(CPS)
table(CPS$Citizenship)
table.prop(table(CPS$Citizenship))
prop.table(table(CPS$Citizenship))
0.88832615 + 0.05386818 + 0.05780567
0.88832615 + 0.05386818
Hispanic = CPS[CPS$Hispanic == 1]
Hispanic = CPS[CPS$Hispanic == 1,]
View(Hispanic)
table(CPS$Race)
table(Hispanic$Race)
table(Hispanic$Race > 250)
table(Hispanic$Race)[1]
table(Hispanic$Race > 250)
table(Hispanic$Race)
summary(CPS)
table(CPS$Region, is.na(CPS$Married))
table(CPS$Sex, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))
table(CPS$Age, is.na(CPS$Married))$TRUE
table(CPS$Citizenship, is.na(CPS$Married))
prop.table(table(CPS$Citizenship, is.na(CPS$Married)))
prop.table(table(CPS$State, is.na(CPS$MetroAreaCode))
table(CPS$State, is.na(CPS$MetroAreaCode)
table(CPS$State, is.na(CPS$MetroAreaCode)
)
table(CPS$State, is.na(CPS$MetroAreaCode))
prop.table(table(CPS$State, is.na(CPS$MetroAreaCode)))
sort(prop.table(table(CPS$State, is.na(CPS$MetroAreaCode))))
which[sort(prop.table(table(CPS$State, is.na(CPS$MetroAreaCode))))]
prop.table(table(CPS$State, is.na(CPS$MetroAreaCode)))
max(prop.table(table(CPS$State, is.na(CPS$MetroAreaCode))))
T = prop.table(table(CPS$State, is.na(CPS$MetroAreaCode)))
T = prop.table(table(CPS$Region, is.na(CPS$MetroAreaCode)))
T
tapply(is.na(CPS$MetroAreaCode), CPS$State, mean)
sort(tapply(is.na(CPS$MetroAreaCode), CPS$State, mean))
MetroAreaCode = read.csv("MetroAreaCodes.csv")
CountryOfBirthCode = read.csv("CountryCodes.csv")
View(MetroAreaCode)
MetroAreaMap = MetroAreaCode
CountryMap = CountryOfBirthCode
str(MetroAreaMap)
str(CountryMap)
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
summary(CPS)
str(CPS)
str(MetroAreaMap)
table(is.na(CPS$MetroArea))
table(CPS$MetroArea)
sort(table(CPS$MetroArea))
which.max(table(CPS$MetroArea))
CPS$MetroArea == "Atlanta-Sandy Springs-Marietta, GA"
table(CPS$MetroArea == "Atlanta-Sandy Springs-Marietta, GA")
metro4 = CPS$MetroArea[CPS$MetroArea == "Atlanta-Sandy Springs-Marietta, GA" | CPS$MetroArea == "Baltimore-Towson, MD" | CPS$MetroArea == "Boston-Cambridge-Quincy, MA-NH" | CPS$MetroArea == "San Francisco-Oakland-Fremont, CA"]
table(metro4)
droplevels(table(metro4))
history
table(CPS$MetroArea)
sort(table(CPS$MetroArea))
View(CPS)
tapply(CPS$Hispanic, CPS$MetroArea, mean)
sort(tapply(CPS$Hispanic, CPS$MetroArea, mean))
tapply(CPS$Race == "Asian", CPS$MetroArea, mean)
sort(tapply(CPS$Race == "Asian", CPS$MetroArea, mean))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE))
?sort
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE, decreasing=TRUE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE, decreasing=FALSE))
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE), decreasing=TRUE)
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE), decreasing=FALSE)
sort(tapply(CPS$Education == "No high school diploma", CPS$MetroArea, mean, na.rm=TRUE), decreasing=TRUE)
View(CountryMap)
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
View(CPS)
View(CountryMap)
table(is.na(CPS$Country))
table(CPS$Country))
table(CPS$Country)
sort(table(CPS$Country))
tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean)
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country, mean))
sort(tapply(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", CPS$Country != "United States", mean))
mean(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & CPS$Country != "United States")
mean(CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & CPS$Country != "United States", na.rm=TRUE)
CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & CPS$Country != "United States"
East = CPS[CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA",]
View(East)
CPS = read.csv("CPSData.csv")
CPS = merge(CPS, MetroAreaMap, by.x="MetroAreaCode", by.y="Code", all.x=TRUE)
View(CPS)
View(CPS)
CPS = merge(CPS, CountryMap, by.x="CountryOfBirthCode", by.y="Code", all.x=TRUE)
View(CPS)
table(CPS$Country)
table(CPS$Country == "United States")
table(CPS$Country == "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA")
table(CPS$Country != "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA")
prop.table(table(CPS$Country != "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA"))
prop.table(table(CPS$Country != "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA", na.rm=TRUE))
prop.table(table(CPS$Country != "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA"), na.rm=TRUE)
prop.table(table(CPS$Country != "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA" & CPS$Country != NA)
)
East = CPS[CPS$Country != "United States" & CPS$MetroArea = "New York-Northern New Jersey-Long Island, NY-NJ-PA",]
East = CPS[CPS$Country != "United States" & CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA",]
East
View(East)
table(Eeast)
table(East)
is.na(East)
table(is.na(East))
prop.table(table(is.na(East)))
East = CPS$Country[CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA""]
p
dsakd
)
\
ljlakjdasdjsf
sadfjaksdlfjlasdms""
View(CPS)
East = CPS$Country[CPS$MetroArea == "New York-Northern New Jersey-Long Island, NY-NJ-PA"]
table(East)
prop.table(table(East != "United States"))
tapply(CPS$Country == "India", CPSMetroArea, mean, na.rm=TRUE)
tapply(CPS$Country == "India", CPS$MetroArea, mean, na.rm=TRUE)
sort(tapply(CPS$Country == "India", CPS$MetroArea, mean, na.rm=TRUE), na.rm=TRUE)
sort(tapply(CPS$Country == "India", CPS$MetroArea, mean, na.rm=TRUE))
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE))
sort(tapply(CPS$Country == "India", CPS$MetroArea, mean, na.rm=TRUE))
sort(tapply(CPS$Country == "India", CPS$MetroArea, sum, na.rm=TRUE))
sort(tapply(CPS$Country == "Brazil", CPS$MetroArea, sum, na.rm=TRUE))
sort(tapply(CPS$Country == "Somalia", CPS$MetroArea, sum, na.rm=TRUE))
India = CPS$MetroArea[CPS$Country == "India"]
table(India, na.rm=TRUE)
table(India)
India = CPS[CPS$Country == "India",]
View(India)
tapply(India$Country, India$MetroArea, mean)
India
table(India$MetroArea)
sort(table(India$MetroArea), na.rm=TRUE)
Brazil = CPS[CPS$Country=="Brazil",]
View(Brazil)
sort(table(Brazil), na.rm=TRUE)
sort(table(Brazil$MetroArea), na.rm=TRUE)
Somalia <- CPS[CPS$Country == "Somalia",]
sort(table(Somalia$MetroArea), na.rm=TRUE)
savehistory("cps.rhistory")
